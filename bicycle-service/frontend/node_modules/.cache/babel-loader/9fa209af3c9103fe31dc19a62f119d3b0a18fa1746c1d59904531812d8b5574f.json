{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\putom\\\\Downloads\\\\reactfrontendtesty\\\\myfrontend\\\\src\\\\components\\\\UserLogin.js\",\n  _s = $RefreshSig$();\n/*\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserLogin = () => {\r\n  const [email, setUserEmail] = useState('');\r\n  const [password, setUserPassword] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n   \r\n    const response = await axios.post('http://localhost:8081/customers/loginvalidation', { email, password });\r\n\r\n    if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        window.location.href = '/bicycle-list';\r\n    };\r\n\r\n  }  \r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input type=\"text\" placeholder=\"E-mail\" value={email} onChange={(e) => setUserEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Password\" value={password} onChange={(e) => setUserPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default UserLogin;\r\n\r\n*/\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserLogin = () => {\n  _s();\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize navigate\n\n  const isValidEmail = email => /\\S+@\\S+\\.\\S+/.test(email); // Basic email validation\n\n  const handleLogin = async () => {\n    setError(''); // Clear any previous errors\n\n    // Validate email and password\n    /* more robust:\r\n    import validator from 'validator';\r\n    console.log(validator.isEmail(\"test@example.com\")); // true\r\n    */\n    if (!isValidEmail(userEmail)) {\n      setError('Please enter a valid email address.');\n      return;\n    }\n    if (!userPassword) {\n      setError('Password cannot be empty.');\n      return;\n    }\n    setIsLoading(true); // Show loading state\n\n    try {\n      const response = await axios.post('http://localhost:8081/customers/loginvalidation', {\n        email: userEmail,\n        password: userPassword\n      });\n      if (response.status === 200) {\n        alert('User logged-in successfully!');\n        //window.location.href = '/bicycle-list';\n        navigate('/bicycle-list');\n      }\n    } catch (error) {\n      // Handle backend errors (e.g., invalid credentials)\n      if (error.response && error.response.status === 404) {\n        setError('Invalid email or password.');\n      } else {\n        setError('An error occurred. Please try again later.');\n      }\n    } finally {\n      setIsLoading(false); // Hide loading state\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"E-mail\",\n      value: userEmail,\n      onChange: e => setUserEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: userPassword,\n      onChange: e => setUserPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      disabled: isLoading,\n      children: isLoading ? 'Logging in...' : 'Login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(UserLogin, \"PHSPVeLvcVsz7iMNX3iwjBGG4Ag=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLogin;\nexport default UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","UserLogin","_s","userEmail","setUserEmail","userPassword","setUserPassword","error","setError","isLoading","setIsLoading","navigate","isValidEmail","email","test","handleLogin","response","post","password","status","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/putom/Downloads/reactfrontendtesty/myfrontend/src/components/UserLogin.js"],"sourcesContent":["/*\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserLogin = () => {\r\n  const [email, setUserEmail] = useState('');\r\n  const [password, setUserPassword] = useState('');\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n   \r\n    const response = await axios.post('http://localhost:8081/customers/loginvalidation', { email, password });\r\n\r\n    if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        window.location.href = '/bicycle-list';\r\n    };\r\n\r\n  }  \r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input type=\"text\" placeholder=\"E-mail\" value={email} onChange={(e) => setUserEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Password\" value={password} onChange={(e) => setUserPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default UserLogin;\r\n\r\n*/\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserLogin = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate(); // Initialize navigate\r\n\r\n  const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email); // Basic email validation\r\n\r\n  const handleLogin = async () => {\r\n    setError(''); // Clear any previous errors\r\n\r\n    // Validate email and password\r\n    /* more robust:\r\n    import validator from 'validator';\r\n    console.log(validator.isEmail(\"test@example.com\")); // true\r\n    */\r\n    if (!isValidEmail(userEmail)) {\r\n      setError('Please enter a valid email address.');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      setError('Password cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Show loading state\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8081/customers/loginvalidation', {\r\n        email: userEmail,\r\n        password: userPassword,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        //window.location.href = '/bicycle-list';\r\n        navigate('/bicycle-list');\r\n      }\r\n    } catch (error) {\r\n      // Handle backend errors (e.g., invalid credentials)\r\n      if (error.response && error.response.status === 404) {\r\n        setError('Invalid email or password.');\r\n      } else {\r\n        setError('An error occurred. Please try again later.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false); // Hide loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"E-mail\"\r\n        value={userEmail}\r\n        onChange={(e) => setUserEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={userPassword}\r\n        onChange={(e) => setUserPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        {isLoading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>} \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}