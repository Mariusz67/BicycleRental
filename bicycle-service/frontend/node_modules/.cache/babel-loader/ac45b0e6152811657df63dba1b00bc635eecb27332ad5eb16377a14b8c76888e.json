{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\putom\\\\Downloads\\\\reactfrontendtesty\\\\myfrontend\\\\src\\\\components\\\\UserLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserLogin = () => {\n  _s();\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const handleLogin = async () => {\n    const response = await axios.post('http://localhost:8081/customers/login', {\n      email: userEmail,\n      password: userPassword\n    });\n    if (response.status === 200) {\n      alert('User logged-in successfully!');\n      window.location.href = '/bicycle-list';\n    }\n    ;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"E-mail\",\n        value: userEmail,\n        onChange: e => setUserEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Password\",\n        value: userPassword,\n        onChange: e => setUserPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogin,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(UserLogin, \"zemzGYHwsGFY0xQoKDbk8csw/P4=\");\n_c = UserLogin;\nexport default UserLogin;\n\n/*\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserLogin = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email); // Basic email validation\r\n\r\n  const handleLogin = async () => {\r\n    setError(''); // Clear any previous errors\r\n\r\n    // Validate email and password\r\n    if (!isValidEmail(userEmail)) {\r\n      setError('Please enter a valid email address.');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      setError('Password cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Show loading state\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8081/customers/login', {\r\n        email: userEmail,\r\n        password: userPassword,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        // Redirect to another page or perform additional actions here\r\n        // e.g., window.location.href = '/bicycle-list';\r\n      }\r\n    } catch (error) {\r\n      // Handle backend errors (e.g., invalid credentials)\r\n      if (error.response && error.response.status === 404) {\r\n        setError('Invalid email or password.');\r\n      } else {\r\n        setError('An error occurred. Please try again later.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false); // Hide loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"E-mail\"\r\n        value={userEmail}\r\n        onChange={(e) => setUserEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={userPassword}\r\n        onChange={(e) => setUserPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        {isLoading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n\r\n\r\n*/\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UserLogin","_s","userEmail","setUserEmail","userPassword","setUserPassword","handleLogin","response","post","email","password","status","alert","window","location","href","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/putom/Downloads/reactfrontendtesty/myfrontend/src/components/UserLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserLogin = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n   \r\n    const response = await axios.post('http://localhost:8081/customers/login', {\r\n        email: userEmail,\r\n        password: userPassword,\r\n      });\r\n\r\n    if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        window.location.href = '/bicycle-list';\r\n    };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input type=\"text\" placeholder=\"E-mail\" value={userEmail} onChange={(e) => setUserEmail(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Password\" value={userPassword} onChange={(e) => setUserPassword(e.target.value)} />\r\n      <button onClick={handleLogin}>Login</button>\r\n    </div>\r\n  );\r\n};\r\n};\r\n\r\nexport default UserLogin;\r\n\r\n/*\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UserLogin = () => {\r\n  const [userEmail, setUserEmail] = useState('');\r\n  const [userPassword, setUserPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const isValidEmail = (email) => /\\S+@\\S+\\.\\S+/.test(email); // Basic email validation\r\n\r\n  const handleLogin = async () => {\r\n    setError(''); // Clear any previous errors\r\n\r\n    // Validate email and password\r\n    if (!isValidEmail(userEmail)) {\r\n      setError('Please enter a valid email address.');\r\n      return;\r\n    }\r\n    if (!userPassword) {\r\n      setError('Password cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true); // Show loading state\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:8081/customers/login', {\r\n        email: userEmail,\r\n        password: userPassword,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert('User logged-in successfully!');\r\n        // Redirect to another page or perform additional actions here\r\n        // e.g., window.location.href = '/bicycle-list';\r\n      }\r\n    } catch (error) {\r\n      // Handle backend errors (e.g., invalid credentials)\r\n      if (error.response && error.response.status === 404) {\r\n        setError('Invalid email or password.');\r\n      } else {\r\n        setError('An error occurred. Please try again later.');\r\n      }\r\n    } finally {\r\n      setIsLoading(false); // Hide loading state\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h2>User Login</h2>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"E-mail\"\r\n        value={userEmail}\r\n        onChange={(e) => setUserEmail(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        value={userPassword}\r\n        onChange={(e) => setUserPassword(e.target.value)}\r\n      />\r\n      <button onClick={handleLogin} disabled={isLoading}>\r\n        {isLoading ? 'Logging in...' : 'Login'}\r\n      </button>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n\r\n\r\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,WAAW,GAAG,MAAAA,CAAA,KAAY;IAE9B,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,uCAAuC,EAAE;MACvEC,KAAK,EAAEP,SAAS;MAChBQ,QAAQ,EAAEN;IACZ,CAAC,CAAC;IAEJ,IAAIG,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MACzBC,KAAK,CAAC,8BAA8B,CAAC;MACrCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,eAAe;IAC1C;IAAC;IAEH,oBACEhB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBlB,OAAA;QAAAkB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,QAAQ;QAACC,KAAK,EAAEtB,SAAU;QAACuB,QAAQ,EAAGC,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3GtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACC,WAAW,EAAC,UAAU;QAACC,KAAK,EAAEpB,YAAa;QAACqB,QAAQ,EAAGC,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnHtB,OAAA;QAAQ6B,OAAO,EAAEtB,WAAY;QAAAW,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CAAC;EAEV,CAAC;AACD,CAAC;AAACpB,EAAA,CAzBID,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AA2Bf,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7EA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}